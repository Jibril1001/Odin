Club-Create post 1

@startuml
actor Club
participant "Dashboard" <<boundary>>
participant postform<<boundary>>
participant "PostController" <<control>>
participant "Posts" <<entity>>

activate Dashboard
Club -> Dashboard: Select "Create Post"
activate postform
Dashboard -> postform: openPostForm()
deactivate Dashboard

Club -> postform: fillPostForm(title, content, tags, expirationDate)
activate PostController
postform-> PostController: Postnews(news)

alt Validation Successful
    PostController -> Posts: savePost(post)
    activate Posts
    PostController-->postform: Post Saved
    postform-->Club:News Created Successfully
    deactivate Posts
else Validation Failed
    PostController --> postform: Invalid post
    postform-->Club: Fill out the missing fields
    deactivate PostController
    deactivate postform
end

@enduml

manage post club 1

@startuml
actor Club
boundary Dashboard
boundary postednews
boundary editpage
control Postcontroller
entity "Posts" 

activate Dashboard
Club -> Dashboard: Select manage Posts
activate postednews
Dashboard -> postednews: open()
destroy Dashboard
activate Posts
activate Postcontroller
postednews -> Postcontroller:getsubmittednews()
Postcontroller->Posts: getSubmittedPosts()

alt  No Submitted Posts
    Posts --> Postcontroller:No posts
    Postcontroller-->postednews: No submitted posts
    postednews --> Club: display No submitted posts available.
else Submitted Posts Exist
    Posts--> Postcontroller:posts
    Postcontroller-->postednews: posts
    Club -> postednews: select Post
    postednews->editpage:open()
    destroy postednews
    activate editpage
    Club -> editpage: edit content and select submit
    editpage -> Postcontroller: updatenews(postid)
    Postcontroller->Posts: updatepost(postid)
    Posts-->Postcontroller: updated successfully
    Postcontroller-->editpage:  Updated successfully
    deactivate Postcontroller
    editpage-->Club: display Updated Successfully
    deactivate Posts
    deactivate editpage
end

deactivate Dashboard
@enduml 

club view pending

@startuml
actor Club
boundary Dashboard
boundary Pendingnews
control Postcontroller
entity Posts

activate Dashboard
Club -> Dashboard: Select Pending Posts
activate Pendingnews
Dashboard -> Pendingnews: open()
destroy Dashboard
activate Posts
activate Postcontroller
Pendingnews -> Postcontroller: getpendingnews()
Postcontroller->Posts: getpendingPosts()

alt post exists
Posts--> Postcontroller:posts
Postcontroller-->Pendingnews: posts
else post doesn't exist
Posts --> Postcontroller: No posts exist
deactivate Posts
Postcontroller --> Pendingnews:Posts doesn't exist
deactivate Postcontroller
Pendingnews-->Club: display No pending news exist.
deactivate Pendingnews
end

@enduml
